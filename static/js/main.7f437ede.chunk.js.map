{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextArea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","React","createElement","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggle","role","htmlFor","TextArea","text","setText","useState","Fragment","style","color","value","onChange","event","target","backgroundColor","rows","changeText","console","log","newChange","toUpperCase","showAlert","split","length","Alert","alert","class","word","lower","toLowerCase","charAt","slice","Capitalize","msg","prototype","PropTypes","string","about","App","setAlert","message","setTimeout","togglemode","document","body","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7f437ede.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      </div>  \r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggle} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Theme</label>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n}\r\n\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextArea(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const changeText = () => {\r\n    console.log(\"Upper case was clicked\");\r\n    let newChange = text.toUpperCase();\r\n    setText(newChange)\r\n    props.showAlert(\"Coverted to upperCase\", \"success\");\r\n  }\r\n  const updated = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-floating\" style={{ color: props.mode === 'light' ? 'black' : 'white' }} >\r\n        <h2>Type here</h2>\r\n        <textarea className=\"form-control\" value={text} onChange={updated} style={{ backgroundColor: props.mode === 'dark' ? '#01010a' : 'white', color: props.mode === 'light' ? 'black' : 'white' }} rows=\"8\" id=\"myBox\"></textarea>\r\n        <label htmlFor=\"floatingTextarea\"></label>\r\n        <button type=\"button\" className=\"btn btn-success my-3\" onClick={changeText}>Convert to Upper case </button>\r\n        <p> words {text.split(\" \").length} character {text.length}</p>\r\n        <h2>Your Summary</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const Capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div class=\"alert alert-success\" role=\"alert\">\r\n            <strong>{Capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport React, { useState } from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500)\n  }\n  const [mode, togglemode] = useState('light');\n  const toggle = () => {\n    if (mode === 'dark') {\n      togglemode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\" Success, Light mode has been enabled\", 'success');\n    }\n    else {\n      togglemode('dark');\n      document.body.style.backgroundColor = '#01010a';\n      showAlert(\" Dark mode has been enabled\", 'success');\n    }\n\n  }\n\n  return (\n    <>\n        {/* <Router>\n        <Routes>\n          <Route path=\"/about\" element={<About mode={mode}/>}/>\n          <Route exact path=\"/\"\n        </Routes>\n        </Router> */}\n      <Navbar title=\"TextUtils\" about=\"About us\" mode={mode} toggle={toggle} />\n      <div className=\"container my-3\">\n      <Alert alert={alert} />\n       <TextArea mode={mode} showAlert={showAlert}/>\n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}